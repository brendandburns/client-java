/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted
 * as read/write once. Fibre Channel volumes support ownership management and
 * SELinux relabeling.
 */
public class V1FCVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the
     * host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to
     * be "ext4" if unspecified.
     */
    @JsonProperty(value = "fsType")
    private String fsType;

    /**
     * Required: FC target lun number.
     */
    @JsonProperty(value = "lun", required = true)
    private int lun;

    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the
     * ReadOnly setting in VolumeMounts.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * Required: FC target worldwide names (WWNs).
     */
    @JsonProperty(value = "targetWWNs", required = true)
    private List<String> targetWWNs;

    /**
     * Get the fsType value.
     *
     * @return the fsType value
     */
    public String fsType() {
        return this.fsType;
    }

    /**
     * Set the fsType value.
     *
     * @param fsType the fsType value to set
     * @return the V1FCVolumeSource object itself.
     */
    public V1FCVolumeSource withFsType(String fsType) {
        this.fsType = fsType;
        return this;
    }

    /**
     * Get the lun value.
     *
     * @return the lun value
     */
    public int lun() {
        return this.lun;
    }

    /**
     * Set the lun value.
     *
     * @param lun the lun value to set
     * @return the V1FCVolumeSource object itself.
     */
    public V1FCVolumeSource withLun(int lun) {
        this.lun = lun;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1FCVolumeSource object itself.
     */
    public V1FCVolumeSource withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the targetWWNs value.
     *
     * @return the targetWWNs value
     */
    public List<String> targetWWNs() {
        return this.targetWWNs;
    }

    /**
     * Set the targetWWNs value.
     *
     * @param targetWWNs the targetWWNs value to set
     * @return the V1FCVolumeSource object itself.
     */
    public V1FCVolumeSource withTargetWWNs(List<String> targetWWNs) {
        this.targetWWNs = targetWWNs;
        return this;
    }

}
