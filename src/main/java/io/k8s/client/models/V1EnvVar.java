/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnvVar represents an environment variable present in a Container.
 */
public class V1EnvVar {
    /**
     * Name of the environment variable. Must be a C_IDENTIFIER.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * Variable references $(VAR_NAME) are expanded using the previous defined
     * environment variables in the container and any service environment
     * variables. If a variable cannot be resolved, the reference in the input
     * string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
     * double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
     * regardless of whether the variable exists or not. Defaults to "".
     */
    @JsonProperty(value = "value")
    private String value;

    /**
     * Source for the environment variable's value. Cannot be used if value is
     * not empty.
     */
    @JsonProperty(value = "valueFrom")
    private V1EnvVarSource valueFrom;

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the V1EnvVar object itself.
     */
    public V1EnvVar withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the value value.
     *
     * @return the value value
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value value.
     *
     * @param value the value value to set
     * @return the V1EnvVar object itself.
     */
    public V1EnvVar withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the valueFrom value.
     *
     * @return the valueFrom value
     */
    public V1EnvVarSource valueFrom() {
        return this.valueFrom;
    }

    /**
     * Set the valueFrom value.
     *
     * @param valueFrom the valueFrom value to set
     * @return the V1EnvVar object itself.
     */
    public V1EnvVar withValueFrom(V1EnvVarSource valueFrom) {
        this.valueFrom = valueFrom;
        return this;
    }

}
