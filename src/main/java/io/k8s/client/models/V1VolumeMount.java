/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VolumeMount describes a mounting of a Volume within a container.
 */
public class V1VolumeMount {
    /**
     * Path within the container at which the volume should be mounted.  Must
     * not contain ':'.
     */
    @JsonProperty(value = "mountPath", required = true)
    private String mountPath;

    /**
     * This must match the Name of a Volume.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified).
     * Defaults to false.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * Path within the volume from which the container's volume should be
     * mounted. Defaults to "" (volume's root).
     */
    @JsonProperty(value = "subPath")
    private String subPath;

    /**
     * Get the mountPath value.
     *
     * @return the mountPath value
     */
    public String mountPath() {
        return this.mountPath;
    }

    /**
     * Set the mountPath value.
     *
     * @param mountPath the mountPath value to set
     * @return the V1VolumeMount object itself.
     */
    public V1VolumeMount withMountPath(String mountPath) {
        this.mountPath = mountPath;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the V1VolumeMount object itself.
     */
    public V1VolumeMount withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1VolumeMount object itself.
     */
    public V1VolumeMount withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the subPath value.
     *
     * @return the subPath value
     */
    public String subPath() {
        return this.subPath;
    }

    /**
     * Set the subPath value.
     *
     * @param subPath the subPath value to set
     * @return the V1VolumeMount object itself.
     */
    public V1VolumeMount withSubPath(String subPath) {
        this.subPath = subPath;
        return this;
    }

}
