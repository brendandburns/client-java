/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write
 * once. ISCSI volumes support ownership management and SELinux relabeling.
 */
public class V1ISCSIVolumeSource {
    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that
     * the filesystem type is supported by the host operating system. Examples:
     * "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://kubernetes.io/docs/user-guide/volumes#iscsi.
     */
    @JsonProperty(value = "fsType")
    private String fsType;

    /**
     * Target iSCSI Qualified Name.
     */
    @JsonProperty(value = "iqn", required = true)
    private String iqn;

    /**
     * Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an
     * iSCSI transport.
     */
    @JsonProperty(value = "iscsiInterface")
    private String iscsiInterface;

    /**
     * iSCSI target lun number.
     */
    @JsonProperty(value = "lun", required = true)
    private int lun;

    /**
     * iSCSI target portal List. The portal is either an IP or ip_addr:port if
     * the port is other than default (typically TCP ports 860 and 3260).
     */
    @JsonProperty(value = "portals")
    private List<String> portals;

    /**
     * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults
     * to false.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * iSCSI target portal. The portal is either an IP or ip_addr:port if the
     * port is other than default (typically TCP ports 860 and 3260).
     */
    @JsonProperty(value = "targetPortal", required = true)
    private String targetPortal;

    /**
     * Get the fsType value.
     *
     * @return the fsType value
     */
    public String fsType() {
        return this.fsType;
    }

    /**
     * Set the fsType value.
     *
     * @param fsType the fsType value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withFsType(String fsType) {
        this.fsType = fsType;
        return this;
    }

    /**
     * Get the iqn value.
     *
     * @return the iqn value
     */
    public String iqn() {
        return this.iqn;
    }

    /**
     * Set the iqn value.
     *
     * @param iqn the iqn value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withIqn(String iqn) {
        this.iqn = iqn;
        return this;
    }

    /**
     * Get the iscsiInterface value.
     *
     * @return the iscsiInterface value
     */
    public String iscsiInterface() {
        return this.iscsiInterface;
    }

    /**
     * Set the iscsiInterface value.
     *
     * @param iscsiInterface the iscsiInterface value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withIscsiInterface(String iscsiInterface) {
        this.iscsiInterface = iscsiInterface;
        return this;
    }

    /**
     * Get the lun value.
     *
     * @return the lun value
     */
    public int lun() {
        return this.lun;
    }

    /**
     * Set the lun value.
     *
     * @param lun the lun value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withLun(int lun) {
        this.lun = lun;
        return this;
    }

    /**
     * Get the portals value.
     *
     * @return the portals value
     */
    public List<String> portals() {
        return this.portals;
    }

    /**
     * Set the portals value.
     *
     * @param portals the portals value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withPortals(List<String> portals) {
        this.portals = portals;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the targetPortal value.
     *
     * @return the targetPortal value
     */
    public String targetPortal() {
        return this.targetPortal;
    }

    /**
     * Set the targetPortal value.
     *
     * @param targetPortal the targetPortal value to set
     * @return the V1ISCSIVolumeSource object itself.
     */
    public V1ISCSIVolumeSource withTargetPortal(String targetPortal) {
        this.targetPortal = targetPortal;
        return this;
    }

}
