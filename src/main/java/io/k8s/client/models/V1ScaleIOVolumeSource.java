/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume.
 */
public class V1ScaleIOVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the
     * host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to
     * be "ext4" if unspecified.
     */
    @JsonProperty(value = "fsType")
    private String fsType;

    /**
     * The host address of the ScaleIO API Gateway.
     */
    @JsonProperty(value = "gateway", required = true)
    private String gateway;

    /**
     * The name of the Protection Domain for the configured storage (defaults
     * to "default").
     */
    @JsonProperty(value = "protectionDomain")
    private String protectionDomain;

    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly
     * setting in VolumeMounts.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * SecretRef references to the secret for ScaleIO user and other sensitive
     * information. If this is not provided, Login operation will fail.
     */
    @JsonProperty(value = "secretRef", required = true)
    private V1LocalObjectReference secretRef;

    /**
     * Flag to enable/disable SSL communication with Gateway, default false.
     */
    @JsonProperty(value = "sslEnabled")
    private Boolean sslEnabled;

    /**
     * Indicates whether the storage for a volume should be thick or thin
     * (defaults to "thin").
     */
    @JsonProperty(value = "storageMode")
    private String storageMode;

    /**
     * The Storage Pool associated with the protection domain (defaults to
     * "default").
     */
    @JsonProperty(value = "storagePool")
    private String storagePool;

    /**
     * The name of the storage system as configured in ScaleIO.
     */
    @JsonProperty(value = "system", required = true)
    private String system;

    /**
     * The name of a volume already created in the ScaleIO system that is
     * associated with this volume source.
     */
    @JsonProperty(value = "volumeName")
    private String volumeName;

    /**
     * Get the fsType value.
     *
     * @return the fsType value
     */
    public String fsType() {
        return this.fsType;
    }

    /**
     * Set the fsType value.
     *
     * @param fsType the fsType value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withFsType(String fsType) {
        this.fsType = fsType;
        return this;
    }

    /**
     * Get the gateway value.
     *
     * @return the gateway value
     */
    public String gateway() {
        return this.gateway;
    }

    /**
     * Set the gateway value.
     *
     * @param gateway the gateway value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withGateway(String gateway) {
        this.gateway = gateway;
        return this;
    }

    /**
     * Get the protectionDomain value.
     *
     * @return the protectionDomain value
     */
    public String protectionDomain() {
        return this.protectionDomain;
    }

    /**
     * Set the protectionDomain value.
     *
     * @param protectionDomain the protectionDomain value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withProtectionDomain(String protectionDomain) {
        this.protectionDomain = protectionDomain;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the secretRef value.
     *
     * @return the secretRef value
     */
    public V1LocalObjectReference secretRef() {
        return this.secretRef;
    }

    /**
     * Set the secretRef value.
     *
     * @param secretRef the secretRef value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withSecretRef(V1LocalObjectReference secretRef) {
        this.secretRef = secretRef;
        return this;
    }

    /**
     * Get the sslEnabled value.
     *
     * @return the sslEnabled value
     */
    public Boolean sslEnabled() {
        return this.sslEnabled;
    }

    /**
     * Set the sslEnabled value.
     *
     * @param sslEnabled the sslEnabled value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withSslEnabled(Boolean sslEnabled) {
        this.sslEnabled = sslEnabled;
        return this;
    }

    /**
     * Get the storageMode value.
     *
     * @return the storageMode value
     */
    public String storageMode() {
        return this.storageMode;
    }

    /**
     * Set the storageMode value.
     *
     * @param storageMode the storageMode value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withStorageMode(String storageMode) {
        this.storageMode = storageMode;
        return this;
    }

    /**
     * Get the storagePool value.
     *
     * @return the storagePool value
     */
    public String storagePool() {
        return this.storagePool;
    }

    /**
     * Set the storagePool value.
     *
     * @param storagePool the storagePool value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withStoragePool(String storagePool) {
        this.storagePool = storagePool;
        return this;
    }

    /**
     * Get the system value.
     *
     * @return the system value
     */
    public String system() {
        return this.system;
    }

    /**
     * Set the system value.
     *
     * @param system the system value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withSystem(String system) {
        this.system = system;
        return this;
    }

    /**
     * Get the volumeName value.
     *
     * @return the volumeName value
     */
    public String volumeName() {
        return this.volumeName;
    }

    /**
     * Set the volumeName value.
     *
     * @param volumeName the volumeName value to set
     * @return the V1ScaleIOVolumeSource object itself.
     */
    public V1ScaleIOVolumeSource withVolumeName(String volumeName) {
        this.volumeName = volumeName;
        return this;
    }

}
