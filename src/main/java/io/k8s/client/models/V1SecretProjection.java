/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Adapts a secret into a projected volume.
 *
 * The contents of the target Secret's Data field will be presented in a
 * projected volume as files using the keys in the Data field as the file
 * names. Note that this is identical to a secret volume source without the
 * default mode.
 */
public class V1SecretProjection {
    /**
     * If unspecified, each key-value pair in the Data field of the referenced
     * Secret will be projected into the volume as a file whose name is the key
     * and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the Secret, the
     * volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     */
    @JsonProperty(value = "items")
    private List<V1KeyToPath> items;

    /**
     * Name of the referent. More info:
     * http://kubernetes.io/docs/user-guide/identifiers#names.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Specify whether the Secret or its key must be defined.
     */
    @JsonProperty(value = "optional")
    private Boolean optional;

    /**
     * Get the items value.
     *
     * @return the items value
     */
    public List<V1KeyToPath> items() {
        return this.items;
    }

    /**
     * Set the items value.
     *
     * @param items the items value to set
     * @return the V1SecretProjection object itself.
     */
    public V1SecretProjection withItems(List<V1KeyToPath> items) {
        this.items = items;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the V1SecretProjection object itself.
     */
    public V1SecretProjection withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the optional value.
     *
     * @return the optional value
     */
    public Boolean optional() {
        return this.optional;
    }

    /**
     * Set the optional value.
     *
     * @param optional the optional value to set
     * @return the V1SecretProjection object itself.
     */
    public V1SecretProjection withOptional(Boolean optional) {
        this.optional = optional;
        return this;
    }

}
