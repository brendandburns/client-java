/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Handler defines a specific action that should be taken.
 */
public class V1Handler {
    /**
     * One and only one of the following should be specified. Exec specifies
     * the action to take.
     */
    @JsonProperty(value = "exec")
    private V1ExecAction exec;

    /**
     * HTTPGet specifies the http request to perform.
     */
    @JsonProperty(value = "httpGet")
    private V1HTTPGetAction httpGet;

    /**
     * TCPSocket specifies an action involving a TCP port. TCP hooks not yet
     * supported.
     */
    @JsonProperty(value = "tcpSocket")
    private V1TCPSocketAction tcpSocket;

    /**
     * Get the exec value.
     *
     * @return the exec value
     */
    public V1ExecAction exec() {
        return this.exec;
    }

    /**
     * Set the exec value.
     *
     * @param exec the exec value to set
     * @return the V1Handler object itself.
     */
    public V1Handler withExec(V1ExecAction exec) {
        this.exec = exec;
        return this;
    }

    /**
     * Get the httpGet value.
     *
     * @return the httpGet value
     */
    public V1HTTPGetAction httpGet() {
        return this.httpGet;
    }

    /**
     * Set the httpGet value.
     *
     * @param httpGet the httpGet value to set
     * @return the V1Handler object itself.
     */
    public V1Handler withHttpGet(V1HTTPGetAction httpGet) {
        this.httpGet = httpGet;
        return this;
    }

    /**
     * Get the tcpSocket value.
     *
     * @return the tcpSocket value
     */
    public V1TCPSocketAction tcpSocket() {
        return this.tcpSocket;
    }

    /**
     * Set the tcpSocket value.
     *
     * @param tcpSocket the tcpSocket value to set
     * @return the V1Handler object itself.
     */
    public V1Handler withTcpSocket(V1TCPSocketAction tcpSocket) {
        this.tcpSocket = tcpSocket;
        return this;
    }

}
