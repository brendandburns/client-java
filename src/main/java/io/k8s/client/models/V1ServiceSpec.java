/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServiceSpec describes the attributes that a user creates on a service.
 */
public class V1ServiceSpec {
    /**
     * clusterIP is the IP address of the service and is usually assigned
     * randomly by the master. If an address is specified manually and is not
     * in use by others, it will be allocated to the service; otherwise,
     * creation of the service will fail. This field can not be changed through
     * updates. Valid values are "None", empty string (""), or a valid IP
     * address. "None" can be specified for headless services when proxying is
     * not required. Only applies to types ClusterIP, NodePort, and
     * LoadBalancer. Ignored if type is ExternalName. More info:
     * http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies.
     */
    @JsonProperty(value = "clusterIP")
    private String clusterIP;

    /**
     * deprecatedPublicIPs is deprecated and replaced by the externalIPs field
     * with almost the exact same semantics.  This field is retained in the v1
     * API for compatibility until at least 8/20/2016.  It will be removed from
     * any new API revisions.  If both deprecatedPublicIPs *and* externalIPs
     * are set, deprecatedPublicIPs is used.
     */
    @JsonProperty(value = "deprecatedPublicIPs")
    private List<String> deprecatedPublicIPs;

    /**
     * externalIPs is a list of IP addresses for which nodes in the cluster
     * will also accept traffic for this service.  These IPs are not managed by
     * Kubernetes.  The user is responsible for ensuring that traffic arrives
     * at a node with this IP.  A common example is external load-balancers
     * that are not part of the Kubernetes system.  A previous form of this
     * functionality exists as the deprecatedPublicIPs field.  When using this
     * field, callers should also clear the deprecatedPublicIPs field.
     */
    @JsonProperty(value = "externalIPs")
    private List<String> externalIPs;

    /**
     * externalName is the external reference that kubedns or equivalent will
     * return as a CNAME record for this service. No proxying will be involved.
     * Must be a valid DNS name and requires Type to be ExternalName.
     */
    @JsonProperty(value = "externalName")
    private String externalName;

    /**
     * Only applies to Service Type: LoadBalancer LoadBalancer will get created
     * with the IP specified in this field. This feature depends on whether the
     * underlying cloud-provider supports specifying the loadBalancerIP when a
     * load balancer is created. This field will be ignored if the
     * cloud-provider does not support the feature.
     */
    @JsonProperty(value = "loadBalancerIP")
    private String loadBalancerIP;

    /**
     * If specified and supported by the platform, this will restrict traffic
     * through the cloud-provider load-balancer will be restricted to the
     * specified client IPs. This field will be ignored if the cloud-provider
     * does not support the feature." More info:
     * http://kubernetes.io/docs/user-guide/services-firewalls.
     */
    @JsonProperty(value = "loadBalancerSourceRanges")
    private List<String> loadBalancerSourceRanges;

    /**
     * The list of ports that are exposed by this service. More info:
     * http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies.
     */
    @JsonProperty(value = "ports")
    private List<V1ServicePort> ports;

    /**
     * Route service traffic to pods with label keys and values matching this
     * selector. If empty or not present, the service is assumed to have an
     * external process managing its endpoints, which Kubernetes will not
     * modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
     * Ignored if type is ExternalName. More info:
     * http://kubernetes.io/docs/user-guide/services#overview.
     */
    @JsonProperty(value = "selector")
    private Map<String, String> selector;

    /**
     * Supports "ClientIP" and "None". Used to maintain session affinity.
     * Enable client IP based session affinity. Must be ClientIP or None.
     * Defaults to None. More info:
     * http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies.
     */
    @JsonProperty(value = "sessionAffinity")
    private String sessionAffinity;

    /**
     * type determines how the Service is exposed. Defaults to ClusterIP. Valid
     * options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
     * "ExternalName" maps to the specified externalName. "ClusterIP" allocates
     * a cluster-internal IP address for load-balancing to endpoints. Endpoints
     * are determined by the selector or if that is not specified, by manual
     * construction of an Endpoints object. If clusterIP is "None", no virtual
     * IP is allocated and the endpoints are published as a set of endpoints
     * rather than a stable IP. "NodePort" builds on ClusterIP and allocates a
     * port on every node which routes to the clusterIP. "LoadBalancer" builds
     * on NodePort and creates an external load-balancer (if supported in the
     * current cloud) which routes to the clusterIP. More info:
     * http://kubernetes.io/docs/user-guide/services#overview.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the clusterIP value.
     *
     * @return the clusterIP value
     */
    public String clusterIP() {
        return this.clusterIP;
    }

    /**
     * Set the clusterIP value.
     *
     * @param clusterIP the clusterIP value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withClusterIP(String clusterIP) {
        this.clusterIP = clusterIP;
        return this;
    }

    /**
     * Get the deprecatedPublicIPs value.
     *
     * @return the deprecatedPublicIPs value
     */
    public List<String> deprecatedPublicIPs() {
        return this.deprecatedPublicIPs;
    }

    /**
     * Set the deprecatedPublicIPs value.
     *
     * @param deprecatedPublicIPs the deprecatedPublicIPs value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withDeprecatedPublicIPs(List<String> deprecatedPublicIPs) {
        this.deprecatedPublicIPs = deprecatedPublicIPs;
        return this;
    }

    /**
     * Get the externalIPs value.
     *
     * @return the externalIPs value
     */
    public List<String> externalIPs() {
        return this.externalIPs;
    }

    /**
     * Set the externalIPs value.
     *
     * @param externalIPs the externalIPs value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withExternalIPs(List<String> externalIPs) {
        this.externalIPs = externalIPs;
        return this;
    }

    /**
     * Get the externalName value.
     *
     * @return the externalName value
     */
    public String externalName() {
        return this.externalName;
    }

    /**
     * Set the externalName value.
     *
     * @param externalName the externalName value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withExternalName(String externalName) {
        this.externalName = externalName;
        return this;
    }

    /**
     * Get the loadBalancerIP value.
     *
     * @return the loadBalancerIP value
     */
    public String loadBalancerIP() {
        return this.loadBalancerIP;
    }

    /**
     * Set the loadBalancerIP value.
     *
     * @param loadBalancerIP the loadBalancerIP value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withLoadBalancerIP(String loadBalancerIP) {
        this.loadBalancerIP = loadBalancerIP;
        return this;
    }

    /**
     * Get the loadBalancerSourceRanges value.
     *
     * @return the loadBalancerSourceRanges value
     */
    public List<String> loadBalancerSourceRanges() {
        return this.loadBalancerSourceRanges;
    }

    /**
     * Set the loadBalancerSourceRanges value.
     *
     * @param loadBalancerSourceRanges the loadBalancerSourceRanges value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withLoadBalancerSourceRanges(List<String> loadBalancerSourceRanges) {
        this.loadBalancerSourceRanges = loadBalancerSourceRanges;
        return this;
    }

    /**
     * Get the ports value.
     *
     * @return the ports value
     */
    public List<V1ServicePort> ports() {
        return this.ports;
    }

    /**
     * Set the ports value.
     *
     * @param ports the ports value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withPorts(List<V1ServicePort> ports) {
        this.ports = ports;
        return this;
    }

    /**
     * Get the selector value.
     *
     * @return the selector value
     */
    public Map<String, String> selector() {
        return this.selector;
    }

    /**
     * Set the selector value.
     *
     * @param selector the selector value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withSelector(Map<String, String> selector) {
        this.selector = selector;
        return this;
    }

    /**
     * Get the sessionAffinity value.
     *
     * @return the sessionAffinity value
     */
    public String sessionAffinity() {
        return this.sessionAffinity;
    }

    /**
     * Set the sessionAffinity value.
     *
     * @param sessionAffinity the sessionAffinity value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withSessionAffinity(String sessionAffinity) {
        this.sessionAffinity = sessionAffinity;
        return this;
    }

    /**
     * Get the type value.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type value.
     *
     * @param type the type value to set
     * @return the V1ServiceSpec object itself.
     */
    public V1ServiceSpec withType(String type) {
        this.type = type;
        return this;
    }

}
