/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs
 * volumes do not support ownership management or SELinux relabeling.
 */
public class V1CephFSVolumeSource {
    /**
     * Required: Monitors is a collection of Ceph monitors More info:
     * http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.
     */
    @JsonProperty(value = "monitors", required = true)
    private List<String> monitors;

    /**
     * Optional: Used as the mounted root, rather than the full Ceph tree,
     * default is /.
     */
    @JsonProperty(value = "path")
    private String path;

    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the
     * ReadOnly setting in VolumeMounts. More info:
     * http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * Optional: SecretFile is the path to key ring for User, default is
     * /etc/ceph/user.secret More info:
     * http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.
     */
    @JsonProperty(value = "secretFile")
    private String secretFile;

    /**
     * Optional: SecretRef is reference to the authentication secret for User,
     * default is empty. More info:
     * http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.
     */
    @JsonProperty(value = "secretRef")
    private V1LocalObjectReference secretRef;

    /**
     * Optional: User is the rados user name, default is admin More info:
     * http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.
     */
    @JsonProperty(value = "user")
    private String user;

    /**
     * Get the monitors value.
     *
     * @return the monitors value
     */
    public List<String> monitors() {
        return this.monitors;
    }

    /**
     * Set the monitors value.
     *
     * @param monitors the monitors value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withMonitors(List<String> monitors) {
        this.monitors = monitors;
        return this;
    }

    /**
     * Get the path value.
     *
     * @return the path value
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path value.
     *
     * @param path the path value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the secretFile value.
     *
     * @return the secretFile value
     */
    public String secretFile() {
        return this.secretFile;
    }

    /**
     * Set the secretFile value.
     *
     * @param secretFile the secretFile value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withSecretFile(String secretFile) {
        this.secretFile = secretFile;
        return this;
    }

    /**
     * Get the secretRef value.
     *
     * @return the secretRef value
     */
    public V1LocalObjectReference secretRef() {
        return this.secretRef;
    }

    /**
     * Set the secretRef value.
     *
     * @param secretRef the secretRef value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withSecretRef(V1LocalObjectReference secretRef) {
        this.secretRef = secretRef;
        return this;
    }

    /**
     * Get the user value.
     *
     * @return the user value
     */
    public String user() {
        return this.user;
    }

    /**
     * Set the user value.
     *
     * @param user the user value to set
     * @return the V1CephFSVolumeSource object itself.
     */
    public V1CephFSVolumeSource withUser(String user) {
        this.user = user;
        return this;
    }

}
