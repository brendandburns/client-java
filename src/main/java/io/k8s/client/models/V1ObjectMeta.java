/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.Map;
import org.joda.time.DateTime;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ObjectMeta is metadata that all persisted resources must have, which
 * includes all objects users must create.
 */
public class V1ObjectMeta {
    /**
     * Annotations is an unstructured key value map stored with a resource that
     * may be set by external tools to store and retrieve arbitrary metadata.
     * They are not queryable and should be preserved when modifying objects.
     * More info: http://kubernetes.io/docs/user-guide/annotations.
     */
    @JsonProperty(value = "annotations")
    private Map<String, String> annotations;

    /**
     * The name of the cluster which the object belongs to. This is used to
     * distinguish resources with same name and namespace in different
     * clusters. This field is not set anywhere right now and apiserver is
     * going to ignore it if set in create or update request.
     */
    @JsonProperty(value = "clusterName")
    private String clusterName;

    /**
     * CreationTimestamp is a timestamp representing the server time when this
     * object was created. It is not guaranteed to be set in happens-before
     * order across separate operations. Clients may not set this value. It is
     * represented in RFC3339 form and is in UTC.
     *
     * Populated by the system. Read-only. Null for lists. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.
     */
    @JsonProperty(value = "creationTimestamp")
    private DateTime creationTimestamp;

    /**
     * Number of seconds allowed for this object to gracefully terminate before
     * it will be removed from the system. Only set when deletionTimestamp is
     * also set. May only be shortened. Read-only.
     */
    @JsonProperty(value = "deletionGracePeriodSeconds")
    private Long deletionGracePeriodSeconds;

    /**
     * DeletionTimestamp is RFC 3339 date and time at which this resource will
     * be deleted. This field is set by the server when a graceful deletion is
     * requested by the user, and is not directly settable by a client. The
     * resource is expected to be deleted (no longer visible from resource
     * lists, and not reachable by name) after the time in this field. Once
     * set, this value may not be unset or be set further into the future,
     * although it may be shortened or the resource may be deleted prior to
     * this time. For example, a user may request that a pod is deleted in 30
     * seconds. The Kubelet will react by sending a graceful termination signal
     * to the containers in the pod. After that 30 seconds, the Kubelet will
     * send a hard termination signal (SIGKILL) to the container and after
     * cleanup, remove the pod from the API. In the presence of network
     * partitions, this object may still exist after this timestamp, until an
     * administrator or automated process can determine the resource is fully
     * terminated. If not set, graceful deletion of the object has not been
     * requested.
     *
     * Populated by the system when a graceful deletion is requested.
     * Read-only. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.
     */
    @JsonProperty(value = "deletionTimestamp")
    private DateTime deletionTimestamp;

    /**
     * Must be empty before the object is deleted from the registry. Each entry
     * is an identifier for the responsible component that will remove the
     * entry from the list. If the deletionTimestamp of the object is non-nil,
     * entries in this list can only be removed.
     */
    @JsonProperty(value = "finalizers")
    private List<String> finalizers;

    /**
     * GenerateName is an optional prefix, used by the server, to generate a
     * unique name ONLY IF the Name field has not been provided. If this field
     * is used, the name returned to the client will be different than the name
     * passed. This value will also be combined with a unique suffix. The
     * provided value has the same validation rules as the Name field, and may
     * be truncated by the length of the suffix required to make the value
     * unique on the server.
     *
     * If this field is specified and the generated name exists, the server
     * will NOT return a 409 - instead, it will either return 201 Created or
     * 500 with Reason ServerTimeout indicating a unique name could not be
     * found in the time allotted, and the client should retry (optionally
     * after the time indicated in the Retry-After header).
     *
     * Applied only if Name is not specified. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency.
     */
    @JsonProperty(value = "generateName")
    private String generateName;

    /**
     * A sequence number representing a specific generation of the desired
     * state. Populated by the system. Read-only.
     */
    @JsonProperty(value = "generation")
    private Long generation;

    /**
     * Map of string keys and values that can be used to organize and
     * categorize (scope and select) objects. May match selectors of
     * replication controllers and services. More info:
     * http://kubernetes.io/docs/user-guide/labels.
     */
    @JsonProperty(value = "labels")
    private Map<String, String> labels;

    /**
     * Name must be unique within a namespace. Is required when creating
     * resources, although some resources may allow a client to request the
     * generation of an appropriate name automatically. Name is primarily
     * intended for creation idempotence and configuration definition. Cannot
     * be updated. More info:
     * http://kubernetes.io/docs/user-guide/identifiers#names.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Namespace defines the space within each name must be unique. An empty
     * namespace is equivalent to the "default" namespace, but "default" is the
     * canonical representation. Not all objects are required to be scoped to a
     * namespace - the value of this field for those objects will be empty.
     *
     * Must be a DNS_LABEL. Cannot be updated. More info:
     * http://kubernetes.io/docs/user-guide/namespaces.
     */
    @JsonProperty(value = "namespace")
    private String namespace;

    /**
     * List of objects depended by this object. If ALL objects in the list have
     * been deleted, this object will be garbage collected. If this object is
     * managed by a controller, then an entry in this list will point to this
     * controller, with the controller field set to true. There cannot be more
     * than one managing controller.
     */
    @JsonProperty(value = "ownerReferences")
    private List<V1OwnerReference> ownerReferences;

    /**
     * An opaque value that represents the internal version of this object that
     * can be used by clients to determine when objects have changed. May be
     * used for optimistic concurrency, change detection, and the watch
     * operation on a resource or set of resources. Clients must treat these
     * values as opaque and passed unmodified back to the server. They may only
     * be valid for a particular resource or set of resources.
     *
     * Populated by the system. Read-only. Value must be treated as opaque by
     * clients and . More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency.
     */
    @JsonProperty(value = "resourceVersion")
    private String resourceVersion;

    /**
     * SelfLink is a URL representing this object. Populated by the system.
     * Read-only.
     */
    @JsonProperty(value = "selfLink")
    private String selfLink;

    /**
     * UID is the unique in time and space value for this object. It is
     * typically generated by the server on successful creation of a resource
     * and is not allowed to change on PUT operations.
     *
     * Populated by the system. Read-only. More info:
     * http://kubernetes.io/docs/user-guide/identifiers#uids.
     */
    @JsonProperty(value = "uid")
    private String uid;

    /**
     * Get the annotations value.
     *
     * @return the annotations value
     */
    public Map<String, String> annotations() {
        return this.annotations;
    }

    /**
     * Set the annotations value.
     *
     * @param annotations the annotations value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withAnnotations(Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }

    /**
     * Get the clusterName value.
     *
     * @return the clusterName value
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Set the clusterName value.
     *
     * @param clusterName the clusterName value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withClusterName(String clusterName) {
        this.clusterName = clusterName;
        return this;
    }

    /**
     * Get the creationTimestamp value.
     *
     * @return the creationTimestamp value
     */
    public DateTime creationTimestamp() {
        return this.creationTimestamp;
    }

    /**
     * Set the creationTimestamp value.
     *
     * @param creationTimestamp the creationTimestamp value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withCreationTimestamp(DateTime creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }

    /**
     * Get the deletionGracePeriodSeconds value.
     *
     * @return the deletionGracePeriodSeconds value
     */
    public Long deletionGracePeriodSeconds() {
        return this.deletionGracePeriodSeconds;
    }

    /**
     * Set the deletionGracePeriodSeconds value.
     *
     * @param deletionGracePeriodSeconds the deletionGracePeriodSeconds value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withDeletionGracePeriodSeconds(Long deletionGracePeriodSeconds) {
        this.deletionGracePeriodSeconds = deletionGracePeriodSeconds;
        return this;
    }

    /**
     * Get the deletionTimestamp value.
     *
     * @return the deletionTimestamp value
     */
    public DateTime deletionTimestamp() {
        return this.deletionTimestamp;
    }

    /**
     * Set the deletionTimestamp value.
     *
     * @param deletionTimestamp the deletionTimestamp value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withDeletionTimestamp(DateTime deletionTimestamp) {
        this.deletionTimestamp = deletionTimestamp;
        return this;
    }

    /**
     * Get the finalizers value.
     *
     * @return the finalizers value
     */
    public List<String> finalizers() {
        return this.finalizers;
    }

    /**
     * Set the finalizers value.
     *
     * @param finalizers the finalizers value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withFinalizers(List<String> finalizers) {
        this.finalizers = finalizers;
        return this;
    }

    /**
     * Get the generateName value.
     *
     * @return the generateName value
     */
    public String generateName() {
        return this.generateName;
    }

    /**
     * Set the generateName value.
     *
     * @param generateName the generateName value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withGenerateName(String generateName) {
        this.generateName = generateName;
        return this;
    }

    /**
     * Get the generation value.
     *
     * @return the generation value
     */
    public Long generation() {
        return this.generation;
    }

    /**
     * Set the generation value.
     *
     * @param generation the generation value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withGeneration(Long generation) {
        this.generation = generation;
        return this;
    }

    /**
     * Get the labels value.
     *
     * @return the labels value
     */
    public Map<String, String> labels() {
        return this.labels;
    }

    /**
     * Set the labels value.
     *
     * @param labels the labels value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withLabels(Map<String, String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the namespace value.
     *
     * @return the namespace value
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Set the namespace value.
     *
     * @param namespace the namespace value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }

    /**
     * Get the ownerReferences value.
     *
     * @return the ownerReferences value
     */
    public List<V1OwnerReference> ownerReferences() {
        return this.ownerReferences;
    }

    /**
     * Set the ownerReferences value.
     *
     * @param ownerReferences the ownerReferences value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withOwnerReferences(List<V1OwnerReference> ownerReferences) {
        this.ownerReferences = ownerReferences;
        return this;
    }

    /**
     * Get the resourceVersion value.
     *
     * @return the resourceVersion value
     */
    public String resourceVersion() {
        return this.resourceVersion;
    }

    /**
     * Set the resourceVersion value.
     *
     * @param resourceVersion the resourceVersion value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withResourceVersion(String resourceVersion) {
        this.resourceVersion = resourceVersion;
        return this;
    }

    /**
     * Get the selfLink value.
     *
     * @return the selfLink value
     */
    public String selfLink() {
        return this.selfLink;
    }

    /**
     * Set the selfLink value.
     *
     * @param selfLink the selfLink value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }

    /**
     * Get the uid value.
     *
     * @return the uid value
     */
    public String uid() {
        return this.uid;
    }

    /**
     * Set the uid value.
     *
     * @param uid the uid value to set
     * @return the V1ObjectMeta object itself.
     */
    public V1ObjectMeta withUid(String uid) {
        this.uid = uid;
        return this;
    }

}
