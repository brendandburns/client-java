/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same
 * namespace. This volume finds the bound PV and mounts that volume for the
 * pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around
 * another type of volume that is owned by someone else (the system).
 */
public class V1PersistentVolumeClaimVolumeSource {
    /**
     * ClaimName is the name of a PersistentVolumeClaim in the same namespace
     * as the pod using this volume. More info:
     * http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims.
     */
    @JsonProperty(value = "claimName", required = true)
    private String claimName;

    /**
     * Will force the ReadOnly setting in VolumeMounts. Default false.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * Get the claimName value.
     *
     * @return the claimName value
     */
    public String claimName() {
        return this.claimName;
    }

    /**
     * Set the claimName value.
     *
     * @param claimName the claimName value to set
     * @return the V1PersistentVolumeClaimVolumeSource object itself.
     */
    public V1PersistentVolumeClaimVolumeSource withClaimName(String claimName) {
        this.claimName = claimName;
        return this;
    }

    /**
     * Get the readOnly value.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the readOnly value.
     *
     * @param readOnly the readOnly value to set
     * @return the V1PersistentVolumeClaimVolumeSource object itself.
     */
    public V1PersistentVolumeClaimVolumeSource withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

}
