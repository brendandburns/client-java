/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServiceAccount binds together: * a name, understood by users, and perhaps by
 * peripheral systems, for an identity * a principal that can be authenticated
 * and authorized * a set of secrets.
 */
public class V1ServiceAccount {
    /**
     * APIVersion defines the versioned schema of this representation of an
     * object. Servers should convert recognized schemas to the latest internal
     * value, and may reject unrecognized values. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources.
     */
    @JsonProperty(value = "apiVersion")
    private String apiVersion;

    /**
     * AutomountServiceAccountToken indicates whether pods running as this
     * service account should have an API token automatically mounted. Can be
     * overridden at the pod level.
     */
    @JsonProperty(value = "automountServiceAccountToken")
    private Boolean automountServiceAccountToken;

    /**
     * ImagePullSecrets is a list of references to secrets in the same
     * namespace to use for pulling any images in pods that reference this
     * ServiceAccount. ImagePullSecrets are distinct from Secrets because
     * Secrets can be mounted in the pod, but ImagePullSecrets are only
     * accessed by the kubelet. More info:
     * http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret.
     */
    @JsonProperty(value = "imagePullSecrets")
    private List<V1LocalObjectReference> imagePullSecrets;

    /**
     * Kind is a string value representing the REST resource this object
     * represents. Servers may infer this from the endpoint the client submits
     * requests to. Cannot be updated. In CamelCase. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /**
     * Standard object's metadata. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.
     */
    @JsonProperty(value = "metadata")
    private V1ObjectMeta metadata;

    /**
     * Secrets is the list of secrets allowed to be used by pods running using
     * this ServiceAccount. More info:
     * http://kubernetes.io/docs/user-guide/secrets.
     */
    @JsonProperty(value = "secrets")
    private List<V1ObjectReference> secrets;

    /**
     * Get the apiVersion value.
     *
     * @return the apiVersion value
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Set the apiVersion value.
     *
     * @param apiVersion the apiVersion value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Get the automountServiceAccountToken value.
     *
     * @return the automountServiceAccountToken value
     */
    public Boolean automountServiceAccountToken() {
        return this.automountServiceAccountToken;
    }

    /**
     * Set the automountServiceAccountToken value.
     *
     * @param automountServiceAccountToken the automountServiceAccountToken value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withAutomountServiceAccountToken(Boolean automountServiceAccountToken) {
        this.automountServiceAccountToken = automountServiceAccountToken;
        return this;
    }

    /**
     * Get the imagePullSecrets value.
     *
     * @return the imagePullSecrets value
     */
    public List<V1LocalObjectReference> imagePullSecrets() {
        return this.imagePullSecrets;
    }

    /**
     * Set the imagePullSecrets value.
     *
     * @param imagePullSecrets the imagePullSecrets value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withImagePullSecrets(List<V1LocalObjectReference> imagePullSecrets) {
        this.imagePullSecrets = imagePullSecrets;
        return this;
    }

    /**
     * Get the kind value.
     *
     * @return the kind value
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind value.
     *
     * @param kind the kind value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the metadata value.
     *
     * @return the metadata value
     */
    public V1ObjectMeta metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata value.
     *
     * @param metadata the metadata value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withMetadata(V1ObjectMeta metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the secrets value.
     *
     * @return the secrets value
     */
    public List<V1ObjectReference> secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets value.
     *
     * @param secrets the secrets value to set
     * @return the V1ServiceAccount object itself.
     */
    public V1ServiceAccount withSecrets(List<V1ObjectReference> secrets) {
        this.secrets = secrets;
        return this;
    }

}
