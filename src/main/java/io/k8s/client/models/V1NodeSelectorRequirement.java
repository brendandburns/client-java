/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A node selector requirement is a selector that contains values, a key, and
 * an operator that relates the key and values.
 */
public class V1NodeSelectorRequirement {
    /**
     * The label key that the selector applies to.
     */
    @JsonProperty(value = "key", required = true)
    private String key;

    /**
     * Represents a key's relationship to a set of values. Valid operators are
     * In, NotIn, Exists, DoesNotExist. Gt, and Lt.
     */
    @JsonProperty(value = "operator", required = true)
    private String operator;

    /**
     * An array of string values. If the operator is In or NotIn, the values
     * array must be non-empty. If the operator is Exists or DoesNotExist, the
     * values array must be empty. If the operator is Gt or Lt, the values
     * array must have a single element, which will be interpreted as an
     * integer. This array is replaced during a strategic merge patch.
     */
    @JsonProperty(value = "values")
    private List<String> values;

    /**
     * Get the key value.
     *
     * @return the key value
     */
    public String key() {
        return this.key;
    }

    /**
     * Set the key value.
     *
     * @param key the key value to set
     * @return the V1NodeSelectorRequirement object itself.
     */
    public V1NodeSelectorRequirement withKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get the operator value.
     *
     * @return the operator value
     */
    public String operator() {
        return this.operator;
    }

    /**
     * Set the operator value.
     *
     * @param operator the operator value to set
     * @return the V1NodeSelectorRequirement object itself.
     */
    public V1NodeSelectorRequirement withOperator(String operator) {
        this.operator = operator;
        return this;
    }

    /**
     * Get the values value.
     *
     * @return the values value
     */
    public List<String> values() {
        return this.values;
    }

    /**
     * Set the values value.
     *
     * @param values the values value to set
     * @return the V1NodeSelectorRequirement object itself.
     */
    public V1NodeSelectorRequirement withValues(List<String> values) {
        this.values = values;
        return this;
    }

}
