/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IngressSpec describes the Ingress the user wishes to exist.
 */
public class V1beta1IngressSpec {
    /**
     * A default backend capable of servicing requests that don't match any
     * rule. At least one of 'backend' or 'rules' must be specified. This field
     * is optional to allow the loadbalancer controller or defaulting logic to
     * specify a global default.
     */
    @JsonProperty(value = "backend")
    private V1beta1IngressBackend backend;

    /**
     * A list of host rules used to configure the Ingress. If unspecified, or
     * no rule matches, all traffic is sent to the default backend.
     */
    @JsonProperty(value = "rules")
    private List<V1beta1IngressRule> rules;

    /**
     * TLS configuration. Currently the Ingress only supports a single TLS
     * port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname
     * specified through the SNI TLS extension, if the ingress controller
     * fulfilling the ingress supports SNI.
     */
    @JsonProperty(value = "tls")
    private List<V1beta1IngressTLS> tls;

    /**
     * Get the backend value.
     *
     * @return the backend value
     */
    public V1beta1IngressBackend backend() {
        return this.backend;
    }

    /**
     * Set the backend value.
     *
     * @param backend the backend value to set
     * @return the V1beta1IngressSpec object itself.
     */
    public V1beta1IngressSpec withBackend(V1beta1IngressBackend backend) {
        this.backend = backend;
        return this;
    }

    /**
     * Get the rules value.
     *
     * @return the rules value
     */
    public List<V1beta1IngressRule> rules() {
        return this.rules;
    }

    /**
     * Set the rules value.
     *
     * @param rules the rules value to set
     * @return the V1beta1IngressSpec object itself.
     */
    public V1beta1IngressSpec withRules(List<V1beta1IngressRule> rules) {
        this.rules = rules;
        return this;
    }

    /**
     * Get the tls value.
     *
     * @return the tls value
     */
    public List<V1beta1IngressTLS> tls() {
        return this.tls;
    }

    /**
     * Set the tls value.
     *
     * @param tls the tls value to set
     * @return the V1beta1IngressSpec object itself.
     */
    public V1beta1IngressSpec withTls(List<V1beta1IngressTLS> tls) {
        this.tls = tls;
        return this;
    }

}
