/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A StatefulSetSpec is the specification of a StatefulSet.
 */
public class V1beta1StatefulSetSpec {
    /**
     * Replicas is the desired number of replicas of the given Template. These
     * are replicas in the sense that they are instantiations of the same
     * Template, but individual replicas also have a consistent identity. If
     * unspecified, defaults to 1.
     */
    @JsonProperty(value = "replicas")
    private Integer replicas;

    /**
     * Selector is a label query over pods that should match the replica count.
     * If empty, defaulted to labels on the pod template. More info:
     * http://kubernetes.io/docs/user-guide/labels#label-selectors.
     */
    @JsonProperty(value = "selector")
    private V1LabelSelector selector;

    /**
     * ServiceName is the name of the service that governs this StatefulSet.
     * This service must exist before the StatefulSet, and is responsible for
     * the network identity of the set. Pods get DNS/hostnames that follow the
     * pattern: pod-specific-string.serviceName.default.svc.cluster.local where
     * "pod-specific-string" is managed by the StatefulSet controller.
     */
    @JsonProperty(value = "serviceName", required = true)
    private String serviceName;

    /**
     * Template is the object that describes the pod that will be created if
     * insufficient replicas are detected. Each pod stamped out by the
     * StatefulSet will fulfill this Template, but have a unique identity from
     * the rest of the StatefulSet.
     */
    @JsonProperty(value = "template", required = true)
    private V1PodTemplateSpec template;

    /**
     * VolumeClaimTemplates is a list of claims that pods are allowed to
     * reference. The StatefulSet controller is responsible for mapping network
     * identities to claims in a way that maintains the identity of a pod.
     * Every claim in this list must have at least one matching (by name)
     * volumeMount in one container in the template. A claim in this list takes
     * precedence over any volumes in the template, with the same name.
     */
    @JsonProperty(value = "volumeClaimTemplates")
    private List<V1PersistentVolumeClaim> volumeClaimTemplates;

    /**
     * Get the replicas value.
     *
     * @return the replicas value
     */
    public Integer replicas() {
        return this.replicas;
    }

    /**
     * Set the replicas value.
     *
     * @param replicas the replicas value to set
     * @return the V1beta1StatefulSetSpec object itself.
     */
    public V1beta1StatefulSetSpec withReplicas(Integer replicas) {
        this.replicas = replicas;
        return this;
    }

    /**
     * Get the selector value.
     *
     * @return the selector value
     */
    public V1LabelSelector selector() {
        return this.selector;
    }

    /**
     * Set the selector value.
     *
     * @param selector the selector value to set
     * @return the V1beta1StatefulSetSpec object itself.
     */
    public V1beta1StatefulSetSpec withSelector(V1LabelSelector selector) {
        this.selector = selector;
        return this;
    }

    /**
     * Get the serviceName value.
     *
     * @return the serviceName value
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Set the serviceName value.
     *
     * @param serviceName the serviceName value to set
     * @return the V1beta1StatefulSetSpec object itself.
     */
    public V1beta1StatefulSetSpec withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get the template value.
     *
     * @return the template value
     */
    public V1PodTemplateSpec template() {
        return this.template;
    }

    /**
     * Set the template value.
     *
     * @param template the template value to set
     * @return the V1beta1StatefulSetSpec object itself.
     */
    public V1beta1StatefulSetSpec withTemplate(V1PodTemplateSpec template) {
        this.template = template;
        return this;
    }

    /**
     * Get the volumeClaimTemplates value.
     *
     * @return the volumeClaimTemplates value
     */
    public List<V1PersistentVolumeClaim> volumeClaimTemplates() {
        return this.volumeClaimTemplates;
    }

    /**
     * Set the volumeClaimTemplates value.
     *
     * @param volumeClaimTemplates the volumeClaimTemplates value to set
     * @return the V1beta1StatefulSetSpec object itself.
     */
    public V1beta1StatefulSetSpec withVolumeClaimTemplates(List<V1PersistentVolumeClaim> volumeClaimTemplates) {
        this.volumeClaimTemplates = volumeClaimTemplates;
        return this;
    }

}
