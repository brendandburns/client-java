/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EndpointSubset is a group of addresses with a common set of ports. The
 * expanded set of endpoints is the Cartesian product of Addresses x Ports. For
 * example, given:
 * {
 * Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
 * Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
 * }
 * The resulting set of endpoints can be viewed as:
 * a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
 * b: [ 10.10.1.1:309, 10.10.2.2:309 ].
 */
public class V1EndpointSubset {
    /**
     * IP addresses which offer the related ports that are marked as ready.
     * These endpoints should be considered safe for load balancers and clients
     * to utilize.
     */
    @JsonProperty(value = "addresses")
    private List<V1EndpointAddress> addresses;

    /**
     * IP addresses which offer the related ports but are not currently marked
     * as ready because they have not yet finished starting, have recently
     * failed a readiness check, or have recently failed a liveness check.
     */
    @JsonProperty(value = "notReadyAddresses")
    private List<V1EndpointAddress> notReadyAddresses;

    /**
     * Port numbers available on the related IP addresses.
     */
    @JsonProperty(value = "ports")
    private List<V1EndpointPort> ports;

    /**
     * Get the addresses value.
     *
     * @return the addresses value
     */
    public List<V1EndpointAddress> addresses() {
        return this.addresses;
    }

    /**
     * Set the addresses value.
     *
     * @param addresses the addresses value to set
     * @return the V1EndpointSubset object itself.
     */
    public V1EndpointSubset withAddresses(List<V1EndpointAddress> addresses) {
        this.addresses = addresses;
        return this;
    }

    /**
     * Get the notReadyAddresses value.
     *
     * @return the notReadyAddresses value
     */
    public List<V1EndpointAddress> notReadyAddresses() {
        return this.notReadyAddresses;
    }

    /**
     * Set the notReadyAddresses value.
     *
     * @param notReadyAddresses the notReadyAddresses value to set
     * @return the V1EndpointSubset object itself.
     */
    public V1EndpointSubset withNotReadyAddresses(List<V1EndpointAddress> notReadyAddresses) {
        this.notReadyAddresses = notReadyAddresses;
        return this;
    }

    /**
     * Get the ports value.
     *
     * @return the ports value
     */
    public List<V1EndpointPort> ports() {
        return this.ports;
    }

    /**
     * Set the ports value.
     *
     * @param ports the ports value to set
     * @return the V1EndpointSubset object itself.
     */
    public V1EndpointSubset withPorts(List<V1EndpointPort> ports) {
        this.ports = ports;
        return this;
    }

}
