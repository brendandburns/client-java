/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DeleteOptions may be provided when deleting an API object.
 */
public class V1DeleteOptions {
    /**
     * APIVersion defines the versioned schema of this representation of an
     * object. Servers should convert recognized schemas to the latest internal
     * value, and may reject unrecognized values. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources.
     */
    @JsonProperty(value = "apiVersion")
    private String apiVersion;

    /**
     * The duration in seconds before the object should be deleted. Value must
     * be non-negative integer. The value zero indicates delete immediately. If
     * this value is nil, the default grace period for the specified type will
     * be used. Defaults to a per object value if not specified. zero means
     * delete immediately.
     */
    @JsonProperty(value = "gracePeriodSeconds")
    private Long gracePeriodSeconds;

    /**
     * Kind is a string value representing the REST resource this object
     * represents. Servers may infer this from the endpoint the client submits
     * requests to. Cannot be updated. In CamelCase. More info:
     * http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /**
     * Deprecated: please use the PropagationPolicy, this field will be
     * deprecated in 1.7. Should the dependent objects be orphaned. If
     * true/false, the "orphan" finalizer will be added to/removed from the
     * object's finalizers list. Either this field or PropagationPolicy may be
     * set, but not both.
     */
    @JsonProperty(value = "orphanDependents")
    private Boolean orphanDependents;

    /**
     * Must be fulfilled before a deletion is carried out. If not possible, a
     * 409 Conflict status will be returned.
     */
    @JsonProperty(value = "preconditions")
    private V1Preconditions preconditions;

    /**
     * Whether and how garbage collection will be performed. Either this field
     * or OrphanDependents may be set, but not both. The default policy is
     * decided by the existing finalizer set in the metadata.finalizers and the
     * resource-specific default policy.
     */
    @JsonProperty(value = "propagationPolicy")
    private String propagationPolicy;

    /**
     * Get the apiVersion value.
     *
     * @return the apiVersion value
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Set the apiVersion value.
     *
     * @param apiVersion the apiVersion value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Get the gracePeriodSeconds value.
     *
     * @return the gracePeriodSeconds value
     */
    public Long gracePeriodSeconds() {
        return this.gracePeriodSeconds;
    }

    /**
     * Set the gracePeriodSeconds value.
     *
     * @param gracePeriodSeconds the gracePeriodSeconds value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withGracePeriodSeconds(Long gracePeriodSeconds) {
        this.gracePeriodSeconds = gracePeriodSeconds;
        return this;
    }

    /**
     * Get the kind value.
     *
     * @return the kind value
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind value.
     *
     * @param kind the kind value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the orphanDependents value.
     *
     * @return the orphanDependents value
     */
    public Boolean orphanDependents() {
        return this.orphanDependents;
    }

    /**
     * Set the orphanDependents value.
     *
     * @param orphanDependents the orphanDependents value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withOrphanDependents(Boolean orphanDependents) {
        this.orphanDependents = orphanDependents;
        return this;
    }

    /**
     * Get the preconditions value.
     *
     * @return the preconditions value
     */
    public V1Preconditions preconditions() {
        return this.preconditions;
    }

    /**
     * Set the preconditions value.
     *
     * @param preconditions the preconditions value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withPreconditions(V1Preconditions preconditions) {
        this.preconditions = preconditions;
        return this;
    }

    /**
     * Get the propagationPolicy value.
     *
     * @return the propagationPolicy value
     */
    public String propagationPolicy() {
        return this.propagationPolicy;
    }

    /**
     * Set the propagationPolicy value.
     *
     * @param propagationPolicy the propagationPolicy value to set
     * @return the V1DeleteOptions object itself.
     */
    public V1DeleteOptions withPropagationPolicy(String propagationPolicy) {
        this.propagationPolicy = propagationPolicy;
        return this;
    }

}
