/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ResourceMetricSource indicates how to scale on a resource metric known to
 * Kubernetes, as specified in requests and limits, describing each pod in the
 * current scale target (e.g. CPU or memory).  The values will be averaged
 * together before being compared to the target.  Such metrics are built in to
 * Kubernetes, and have special scaling options on top of those available to
 * normal per-pod metrics using the "pods" source.  Only one "target" type
 * should be set.
 */
public class V2alpha1ResourceMetricSource {
    /**
     * name is the name of the resource in question.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * targetAverageUtilization is the target value of the average of the
     * resource metric across all relevant pods, represented as a percentage of
     * the requested value of the resource for the pods.
     */
    @JsonProperty(value = "targetAverageUtilization")
    private Integer targetAverageUtilization;

    /**
     * targetAverageValue is the the target value of the average of the
     * resource metric across all relevant pods, as a raw value (instead of as
     * a percentage of the request), similar to the "pods" metric source type.
     */
    @JsonProperty(value = "targetAverageValue")
    private String targetAverageValue;

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the V2alpha1ResourceMetricSource object itself.
     */
    public V2alpha1ResourceMetricSource withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the targetAverageUtilization value.
     *
     * @return the targetAverageUtilization value
     */
    public Integer targetAverageUtilization() {
        return this.targetAverageUtilization;
    }

    /**
     * Set the targetAverageUtilization value.
     *
     * @param targetAverageUtilization the targetAverageUtilization value to set
     * @return the V2alpha1ResourceMetricSource object itself.
     */
    public V2alpha1ResourceMetricSource withTargetAverageUtilization(Integer targetAverageUtilization) {
        this.targetAverageUtilization = targetAverageUtilization;
        return this;
    }

    /**
     * Get the targetAverageValue value.
     *
     * @return the targetAverageValue value
     */
    public String targetAverageValue() {
        return this.targetAverageValue;
    }

    /**
     * Set the targetAverageValue value.
     *
     * @param targetAverageValue the targetAverageValue value to set
     * @return the V2alpha1ResourceMetricSource object itself.
     */
    public V2alpha1ResourceMetricSource withTargetAverageValue(String targetAverageValue) {
        this.targetAverageValue = targetAverageValue;
        return this;
    }

}
