/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package io.k8s.client.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
 */
public class V1NodeSystemInfo {
    /**
     * The Architecture reported by the node.
     */
    @JsonProperty(value = "architecture", required = true)
    private String architecture;

    /**
     * Boot ID reported by the node.
     */
    @JsonProperty(value = "bootID", required = true)
    private String bootID;

    /**
     * ContainerRuntime Version reported by the node through runtime remote API
     * (e.g. docker://1.5.0).
     */
    @JsonProperty(value = "containerRuntimeVersion", required = true)
    private String containerRuntimeVersion;

    /**
     * Kernel Version reported by the node from 'uname -r' (e.g.
     * 3.16.0-0.bpo.4-amd64).
     */
    @JsonProperty(value = "kernelVersion", required = true)
    private String kernelVersion;

    /**
     * KubeProxy Version reported by the node.
     */
    @JsonProperty(value = "kubeProxyVersion", required = true)
    private String kubeProxyVersion;

    /**
     * Kubelet Version reported by the node.
     */
    @JsonProperty(value = "kubeletVersion", required = true)
    private String kubeletVersion;

    /**
     * MachineID reported by the node. For unique machine identification in the
     * cluster this field is prefered. Learn more from man(5) machine-id:
     * http://man7.org/linux/man-pages/man5/machine-id.5.html.
     */
    @JsonProperty(value = "machineID", required = true)
    private String machineID;

    /**
     * The Operating System reported by the node.
     */
    @JsonProperty(value = "operatingSystem", required = true)
    private String operatingSystem;

    /**
     * OS Image reported by the node from /etc/os-release (e.g. Debian
     * GNU/Linux 7 (wheezy)).
     */
    @JsonProperty(value = "osImage", required = true)
    private String osImage;

    /**
     * SystemUUID reported by the node. For unique machine identification
     * MachineID is prefered. This field is specific to Red Hat hosts
     * https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html.
     */
    @JsonProperty(value = "systemUUID", required = true)
    private String systemUUID;

    /**
     * Get the architecture value.
     *
     * @return the architecture value
     */
    public String architecture() {
        return this.architecture;
    }

    /**
     * Set the architecture value.
     *
     * @param architecture the architecture value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withArchitecture(String architecture) {
        this.architecture = architecture;
        return this;
    }

    /**
     * Get the bootID value.
     *
     * @return the bootID value
     */
    public String bootID() {
        return this.bootID;
    }

    /**
     * Set the bootID value.
     *
     * @param bootID the bootID value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withBootID(String bootID) {
        this.bootID = bootID;
        return this;
    }

    /**
     * Get the containerRuntimeVersion value.
     *
     * @return the containerRuntimeVersion value
     */
    public String containerRuntimeVersion() {
        return this.containerRuntimeVersion;
    }

    /**
     * Set the containerRuntimeVersion value.
     *
     * @param containerRuntimeVersion the containerRuntimeVersion value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withContainerRuntimeVersion(String containerRuntimeVersion) {
        this.containerRuntimeVersion = containerRuntimeVersion;
        return this;
    }

    /**
     * Get the kernelVersion value.
     *
     * @return the kernelVersion value
     */
    public String kernelVersion() {
        return this.kernelVersion;
    }

    /**
     * Set the kernelVersion value.
     *
     * @param kernelVersion the kernelVersion value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withKernelVersion(String kernelVersion) {
        this.kernelVersion = kernelVersion;
        return this;
    }

    /**
     * Get the kubeProxyVersion value.
     *
     * @return the kubeProxyVersion value
     */
    public String kubeProxyVersion() {
        return this.kubeProxyVersion;
    }

    /**
     * Set the kubeProxyVersion value.
     *
     * @param kubeProxyVersion the kubeProxyVersion value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withKubeProxyVersion(String kubeProxyVersion) {
        this.kubeProxyVersion = kubeProxyVersion;
        return this;
    }

    /**
     * Get the kubeletVersion value.
     *
     * @return the kubeletVersion value
     */
    public String kubeletVersion() {
        return this.kubeletVersion;
    }

    /**
     * Set the kubeletVersion value.
     *
     * @param kubeletVersion the kubeletVersion value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withKubeletVersion(String kubeletVersion) {
        this.kubeletVersion = kubeletVersion;
        return this;
    }

    /**
     * Get the machineID value.
     *
     * @return the machineID value
     */
    public String machineID() {
        return this.machineID;
    }

    /**
     * Set the machineID value.
     *
     * @param machineID the machineID value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withMachineID(String machineID) {
        this.machineID = machineID;
        return this;
    }

    /**
     * Get the operatingSystem value.
     *
     * @return the operatingSystem value
     */
    public String operatingSystem() {
        return this.operatingSystem;
    }

    /**
     * Set the operatingSystem value.
     *
     * @param operatingSystem the operatingSystem value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }

    /**
     * Get the osImage value.
     *
     * @return the osImage value
     */
    public String osImage() {
        return this.osImage;
    }

    /**
     * Set the osImage value.
     *
     * @param osImage the osImage value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withOsImage(String osImage) {
        this.osImage = osImage;
        return this;
    }

    /**
     * Get the systemUUID value.
     *
     * @return the systemUUID value
     */
    public String systemUUID() {
        return this.systemUUID;
    }

    /**
     * Set the systemUUID value.
     *
     * @param systemUUID the systemUUID value to set
     * @return the V1NodeSystemInfo object itself.
     */
    public V1NodeSystemInfo withSystemUUID(String systemUUID) {
        this.systemUUID = systemUUID;
        return this;
    }

}
